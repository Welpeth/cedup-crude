package Telas;

// Passo 1; Importar os módulos e blibliotecas
import DataAccess.ModuloDbConnect;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

public class TelaCadUsers extends javax.swing.JFrame {

     // Passo 2 - Definir as variaveis auxiliares para a conexão
    Connection conexao = null; // retorna o status da conexão
    PreparedStatement pst = null; // Coloca o comando SQL na conexão do banco
    ResultSet rs = null; // Retornar o resultado do comando executado no banco
    
    public TelaCadUsers() {
        initComponents();
        // Passo 3 - Estabelecer/executar a conexão com o banco
        conexao = ModuloDbConnect.connector();
        // Testando o resultado  da conexao
        if (conexao != null) {
            System.out.println("String da conexao Ok: " + conexao);
            lblStatusDB.setText("Conectado OK!");
            lblStatusDB.setForeground(Color.blue);
        }else {
            lblStatusDB.setText("NÃO Conectado.");
            lblStatusDB.setForeground(Color.red);
            }        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnConsultar = new javax.swing.JButton();
        btnIncluir = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnFechar = new javax.swing.JButton();
        lblIdUser = new javax.swing.JLabel();
        lblNomeUser = new javax.swing.JLabel();
        lblLogin = new javax.swing.JLabel();
        lblSenha = new javax.swing.JLabel();
        lblNivelPer = new javax.swing.JLabel();
        txtIdUser = new javax.swing.JTextField();
        txtNomeUser = new javax.swing.JTextField();
        txtLogin = new javax.swing.JTextField();
        txtSenha = new javax.swing.JTextField();
        txtNivelPer = new javax.swing.JTextField();
        lblStatusDB = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        BtnLimpar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Usuários");
        setResizable(false);

        btnConsultar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        btnIncluir.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnIncluir.setText("Incluir");
        btnIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirActionPerformed(evt);
            }
        });

        btnAlterar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnExcluir.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnFechar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnFechar.setText("Fechar");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        lblIdUser.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblIdUser.setText("Id Usuário:");

        lblNomeUser.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblNomeUser.setText("Nome do Usuário*:");

        lblLogin.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblLogin.setText("Login:");

        lblSenha.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblSenha.setText("Senha:");

        lblNivelPer.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblNivelPer.setText("Nivel de Permissão:");

        txtNomeUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeUserActionPerformed(evt);
            }
        });

        lblStatusDB.setText("Nao Conectado");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("* Campos com Preenchimento Obrigatórios");

        BtnLimpar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        BtnLimpar.setText("Limpar");
        BtnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLimparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblLogin)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnConsultar)
                                .addGap(56, 56, 56)
                                .addComponent(btnIncluir))
                            .addComponent(lblSenha)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblStatusDB, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(128, 128, 128)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(btnAlterar)
                                .addGap(57, 57, 57)
                                .addComponent(btnExcluir))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtLogin)
                                    .addComponent(txtSenha, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblNivelPer)
                            .addComponent(lblIdUser)
                            .addComponent(lblNomeUser))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtIdUser, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNomeUser, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtNivelPer, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(219, 219, 219)
                        .addComponent(btnFechar)
                        .addGap(44, 44, 44)
                        .addComponent(BtnLimpar)))
                .addContainerGap(67, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIdUser)
                    .addComponent(txtIdUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNomeUser)
                    .addComponent(txtNomeUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLogin)
                    .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSenha)
                    .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNivelPer)
                    .addComponent(txtNivelPer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConsultar)
                    .addComponent(btnIncluir)
                    .addComponent(btnAlterar)
                    .addComponent(btnExcluir))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFechar)
                    .addComponent(BtnLimpar))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblStatusDB))
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(604, 482));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeUserActionPerformed

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        // TODO add your handling code here:
       // Criando a variavel para o comando SQL de consulta
       String sql = "select * from tbusuario where idTbUsuarioPK = ?";
       
       // Definir o comando de acesso ao banco: try/catch
       try {
            // Associar o comando SQL na conexao ao Banco
            pst = conexao.prepareStatement(sql);
            // Passando a informação do campo usuario da Tela para o 1o. parametro
            // do comando SQL acima.
            pst.setString(1,txtIdUser.getText());
            // Executar/rodar a consulta/comando no banco de dados
            rs = pst.executeQuery();
            
            // Testar o sucesso da consulta !!!!
            if  (rs.next()) {
                // SUCESSO !!! Encontrou a consulta Ok
                // Preencher/Escrever as informaçoes consultadas na Tela
                txtIdUser.setText(rs.getString(1));
                txtNomeUser.setText(rs.getString(2));
                txtLogin.setText(rs.getString(3));
                txtSenha.setText(rs.getString(4));
                txtNivelPer.setText(rs.getString(5));        
                
            } else {
                // Erro na Consulta!!!
                JOptionPane.showMessageDialog(null, "ID / Cadastro INVÁLIDO !!!");
                // Limpando os campos da Tela!
                txtIdUser.setText("");
                txtNomeUser.setText("");
                txtLogin.setText("");
                txtSenha.setText("");
                txtNivelPer.setText("");        
                
            }
           
       }catch (Exception varERRO) {
            JOptionPane.showMessageDialog(null, "Erro no acesso ao Banco DbLogin - Cad. Usuario: " + varERRO.toString());
        }
       
        
      
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirActionPerformed
        // TODO add your handling code here:
        String sql = "insert into tbusuario(idTbUsuarioPK,nmUsuario,nmLogin,nmSenha,TbNivelper_idTbNivelperPK) VALUES (?, ?, ?, ?, ?)";
        
        if ((txtIdUser.getText().isEmpty()) || (txtNomeUser.getText().isEmpty()) || (txtLogin.getText().isEmpty()) || (txtSenha.getText().isEmpty()) || (txtNivelPer.getText().isEmpty())) {
                JOptionPane.showMessageDialog(null, "Preencha os campos obrigatórios.");
        } else {
        try {
            // Colocar o comando SQL, acima, na conexão do banco
            pst = conexao.prepareStatement(sql);
            // Colocar os campos da tela no comando da conexão ao banco
            pst.setString(1, txtIdUser.getText());
            pst.setString(2, txtNomeUser.getText());
            pst.setString(3, txtLogin.getText());
            pst.setString(4, txtSenha.getText());
            pst.setString(5, txtNivelPer.getText());
            // Executamos o comando sql de inserção com o "executeUpdate"
            int adicionado = 0;
            adicionado = pst.executeUpdate();
            if (adicionado > 0) {
                JOptionPane.showMessageDialog(null, "Inclusão OK!!");
                txtIdUser.setText(" ");
                txtNomeUser.setText(" ");
                txtLogin.setText(" ");
                txtSenha.setText(" ");
                txtNivelPer.setText(" ");
            } else {
                JOptionPane.showMessageDialog(null, "Usuário já cadastrado");
            }
        } catch (Exception varERRO) {
            JOptionPane.showMessageDialog(null, "Usuário Adicionado com Sucesso - Erro na rotina de inclusao: " + varERRO.toString());
        }
        }
        
    }//GEN-LAST:event_btnIncluirActionPerformed

    
    
    private void BtnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLimparActionPerformed
        txtIdUser.setText(" ");
        txtNomeUser.setText(" ");
        txtLogin.setText(" ");
        txtSenha.setText(" ");
        txtNivelPer.setText(" ");
    }//GEN-LAST:event_BtnLimparActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        String sql = "DELETE tbusuario SET idTbUsuarioPK = ?, nmUsuario = ?, nmLogin = ?, nmSenha = ?, TbNivelper_idTbNivelperPK = ? WHERE  idTbUsuarioPK = ?";
        
        try {
            // Colocar o comando SQL, acima, na conexão do banco
            pst = conexao.prepareStatement(sql);
            // Colocar os campos da tela no comando da conexão ao banco
            pst.setString(1, txtIdUser.getText());
            pst.setString(2, txtNomeUser.getText());
            pst.setString(3, txtLogin.getText());
            pst.setString(4, txtSenha.getText());
            pst.setString(5, txtNivelPer.getText());
            pst.setString(6, txtIdUser.getText());
            // Executamos o comando sql de alteração/UPDATE com o "executeUpdate"
            
            int alterado = 0;
            alterado = pst.executeUpdate();
            if (alterado > 0) {
                JOptionPane.showMessageDialog(null, "Alterado OK!!");
                txtIdUser.setText(" ");
                txtNomeUser.setText(" ");
                txtLogin.setText(" ");
                txtSenha.setText(" ");
                txtNivelPer.setText(" ");
            } else {
                JOptionPane.showMessageDialog(null, "Usuário Inexistente");
            }
        } catch (Exception varERRO) {
            JOptionPane.showMessageDialog(null, "Usuário Alterado com Sucesso - Erro na rotina de inclusao: " + varERRO.toString());
        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
    // Confirmar para a exclusão perguntando o usuário se ele confirma
        int confirmaOK = JOptionPane.showConfirmDialog(null, "Confirma a exclusão do registro?", "ATENÇÃO", JOptionPane.YES_NO_OPTION);
        
          if (confirmaOK == JOptionPane.YES_OPTION) {
            // Constroi o comando SQL de deleção
                String sql = "DELETE FROM tbusuario WHERE idTbUsuarioPK = ?";
                try {
                    pst = conexao.prepareStatement(sql);
                    // Colocar os campos da tela no comando da conexão ao banco
                    pst.setString(1, txtIdUser.getText()); 
                    // Executando a deleção do registro
                    pst.executeUpdate();
                    
                } catch (Exception varERRO){
                    JOptionPane.showMessageDialog(null, "Erro na rotina de exclusão");
                }    
    }//GEN-LAST:event_btnExcluirActionPerformed
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCadUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCadUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCadUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCadUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCadUsers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnLimpar;
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnIncluir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblIdUser;
    private javax.swing.JLabel lblLogin;
    private javax.swing.JLabel lblNivelPer;
    private javax.swing.JLabel lblNomeUser;
    private javax.swing.JLabel lblSenha;
    private javax.swing.JLabel lblStatusDB;
    private javax.swing.JTextField txtIdUser;
    private javax.swing.JTextField txtLogin;
    private javax.swing.JTextField txtNivelPer;
    private javax.swing.JTextField txtNomeUser;
    private javax.swing.JTextField txtSenha;
    // End of variables declaration//GEN-END:variables
}
